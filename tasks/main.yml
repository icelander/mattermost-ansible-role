---
- name: Ensure database is created
  become: true
  become_user: postgres
  postgresql_db:
    name: "{{ mattermost_db_name }}"

- name: Ensure user has access to the database
  become: yes
  become_user: postgres
  postgresql_user:
    db: "{{ mattermost_db_name }}"
    name: "{{ mattermost_db_user }}"
    password: "{{ mattermost_db_password }}"
    priv: ALL

- name: Ensure user does not have unnecessary privilege
  become: yes
  become_user: postgres
  postgresql_user: 
    name: "{{ mattermost_db_user }}"
    role_attr_flags: NOSUPERUSER,NOCREATEDB

- name: 'Download binary from https://releases.mattermost.com'
  get_url: 
    url: 'https://releases.mattermost.com/{{ mattermost_version }}/mattermost-team-{{ mattermost_version }}-linux-amd64.tar.gz'
    dest: /tmp/
  when: not mattermost_enterprise

- name: 'Download Enterprise version binary from https://releases.mattermost.com'
  get_url: 
    url: 'https://releases.mattermost.com/{{ mattermost_version }}/mattermost-{{ mattermost_version }}-linux-amd64.tar.gz'
    dest: /tmp/
  when: mattermost_enterprise

- name: Unpack mattermost archive.
  unarchive: 
    src: /tmp/mattermost-team-{{ mattermost_version }}-linux-amd64.tar.gz 
    dest: /opt/
    copy: no
  args:
    creates: /opt/mattermost/bin/platform
  when: not mattermost_enterprise

- name: Unpack mattermost enterprise archive.
  unarchive: 
    src: /tmp/mattermost-{{ mattermost_version }}-linux-amd64.tar.gz 
    dest: /opt/
    copy: no
  args:
    creates: /opt/mattermost/bin/platform
  when: mattermost_enterprise

- name: Create user to run mattermost service.
  user: 
    name: "{{ mattermost_user }}"
    system: yes
    createhome: no 

- name: Place mattermost licence file
  copy:
    src: "{{ inventory_hostname }}/mattermost_licence"
    dest: "{{ mattermost_Service_LicenseFileLocation }}"
    owner: "{{ mattermost_user }}"
    group: "{{ mattermost_user }}"
    mode: 0600       
  when: mattermost_enterprise

- name: Apply mattermost config.json template
  template:
    src: mattermost-config.json.j2
    dest: /opt/mattermost/config/config.json
    owner: "{{ mattermost_user }}"
    group: "{{ mattermost_user }}"
    mode: 0644
  
- name: Change mattermost directory permissions
  file:
    path: /opt/mattermost
    state: directory
    owner: "{{ mattermost_user }}"
    group: "{{ mattermost_user }}"
    recurse: yes

- name: Create mattermost systemd service 
  template:
    src: systemd.j2
    dest: /etc/systemd/system/mattermost.service
    owner: root
    group: root
    mode: 0664

- name: Enable Mattermost service
  service:
    name: mattermost
    enabled: yes
    state: started 
  notify: "restart services"

- name: Create teams
  shell: "./platform team create --name {{ item.name }} --email {{ item.email }} --display_name {{ item.display_name }} {% if item.private | default(false) %}--private{% endif %}"
  with_items:
    "{{ mattermost_teams }}"
  args:
    chdir: "/opt/mattermost/bin/"

- name: Create admin users
  shell: "./platform user create --lastname {{ item.lastname }} --firstname {{ item.firstname }} --email {{ item.email }} --password {{ item.password }} --username {{ item.username }} --system_admin"
  with_items:
    "{{ mattermost_admins }}"
  args:
    chdir: "/opt/mattermost/bin/"
